spring:
  profiles: docker
  application:
    name: mybook
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: mybook
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8085

datasource:
  url: jdbc:h2:mem:mybookdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  driver-class-name: org.h2.Driver
  username: sa
  password:

jpa:
  hibernate:
    ddl-auto: update
  properties:
    hibernate:
      show_sql: true
      format_sql: true
      use_sql_comments: true
    database-platform: org.hibernate.dialect.H2Dialect

h2:
  console:
    enabled: true
    path: /h2-console
    settings:
      web-allow-others: true

books:
  service-url: http://localhost:8084

logging:
  level:
    root: INFO
    mp: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.springframework.transaction: TRACE

---
spring:
  profiles: docker
  datasource:
    url: jdbc:h2:mem:mybookdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  kafka:
    bootstrap-servers: my-kafka:9092
    consumer:
      group-id: mybook
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

books:
  service-url: http://gateway:8089













